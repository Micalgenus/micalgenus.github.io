{"version":3,"sources":["webpack:///./src/pages/categories.tsx","webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/core-js/modules/_object-to-array.js"],"names":["data","location","posts","allMarkdownRemark","edges","map","node","frontmatter","items","post","categories","category","concat","Object","entries","sort","a","length","className","title","keywords","key","momentFormat","pageQuery","$export","$entries","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","i","result","call","push"],"mappings":"mOAoBe,sBAA+B,IAA5BA,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAChBC,EAAQF,EAAKG,kBAAkBC,MAAMC,KAAI,qBAAGC,KAAQC,eACpDC,EAA4C,GAClD,EAAmBN,EAAnB,wDAA0B,yFAAfO,EAAe,EAExB,EADuBA,EAAfC,WACR,wDAAmC,yFAAxBC,EAAwB,EACjCH,EAAMG,IAAaH,EAAMG,IAAa,IAAIC,OAAOH,IAIrD,IAAMC,EAAuBG,OAAOC,QAAQN,GACzCO,MAAK,kBAAcC,EAAd,KAAMC,OAAN,YAAyBA,OAAqBD,KACnDX,KAAI,2BAEP,OACE,kBAAC,IAAD,CAAQa,UAAU,aAAajB,SAAUA,GACvC,kBAAC,IAAD,CAAKkB,MAAM,aAAaC,SAAU,CAAC,SAAD,yBACjCV,EAAWL,KAAI,SAAAM,GAAQ,OACtB,kBAAC,IAAD,CAASU,IAAKV,EAAUQ,MAAOR,EAAUH,MAAOA,EAAMG,GAAWW,aAAa,sBAM/E,IAAMC,EAAY,c,oBC3CzB,IAAIC,EAAU,EAAQ,GAClBC,EAAW,EAAQ,IAAR,EAA8B,GAE7CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BZ,QAAS,SAAiBa,GACxB,OAAOF,EAASE,O,oBCNpB,IAAIC,EAAc,EAAQ,IACtBC,EAAU,EAAQ,IAClBC,EAAY,EAAQ,IACpBC,EAAS,EAAQ,IAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUR,GAOf,IANA,IAKIN,EALAe,EAAIN,EAAUH,GACdU,EAAOR,EAAQO,GACfnB,EAASoB,EAAKpB,OACdqB,EAAI,EACJC,EAAS,GAENtB,EAASqB,GACdjB,EAAMgB,EAAKC,KACNV,IAAeG,EAAOS,KAAKJ,EAAGf,IACjCkB,EAAOE,KAAKN,EAAY,CAACd,EAAKe,EAAEf,IAAQe,EAAEf,IAG9C,OAAOkB","file":"component---src-pages-categories-tsx-d0ed4e8bb98a8e912a0b.js","sourcesContent":["import React from 'react';\n\nimport { Layout } from '@/containers/layout';\nimport SEO from '@/components/seo';\nimport Archive from '@/components/archive';\nimport { graphql, PageRendererProps } from 'gatsby';\nimport { PostMeta } from '@/components/archive-content';\n\ninterface Props extends PageRendererProps {\n  data: {\n    allMarkdownRemark: {\n      edges: Array<{\n        node: {\n          frontmatter: PostMeta;\n        };\n      }>;\n    };\n  };\n}\n\nexport default ({ data, location }: Props) => {\n  const posts = data.allMarkdownRemark.edges.map(({ node: { frontmatter: post } }) => post);\n  const items: { [category: string]: PostMeta[] } = {};\n  for (const post of posts) {\n    const { categories } = post;\n    for (const category of categories) {\n      items[category] = (items[category] || []).concat(post);\n    }\n  }\n\n  const categories: string[] = Object.entries(items)\n    .sort(([, { length: a }], [, { length: b }]) => b - a)\n    .map(([category]) => category);\n\n  return (\n    <Layout className=\"categories\" location={location}>\n      <SEO title=\"Micalgenus\" keywords={[`gatsby`, `application`, `react`]} />\n      {categories.map(category => (\n        <Archive key={category} title={category} items={items[category]} momentFormat=\"MMM DD, YYYY\" />\n      ))}\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            date\n            categories\n          }\n        }\n      }\n    }\n  }\n`;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}