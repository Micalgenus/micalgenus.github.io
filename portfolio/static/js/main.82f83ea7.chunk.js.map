{"version":3,"sources":["store/modules/scroll.js","store/modules/index.js","containers/Layout/Components/Header/index.js","containers/Layout/Components/Router/index.js","containers/Layout/index.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["CHANGE_SCROLL_Y","initialState","scrollY","combineReducers","scroll","state","arguments","length","undefined","action","type","Object","objectSpread","LayoutHeader","react_default","a","createElement","className","Link","to","this","props","routers","map","router","idx","path","key","title","Component","defaultProps","Router","react","fallback","Switch","route","Route","exact","component","Layout","componentDidMount","window","addEventListener","_this","handleScroll","componentWillUnmount","removeEventListener","_this$props","changeScrollY","currentScrollY","console","log","BrowserRouter","Header_LayoutHeader","Router_Router","connect","dispatch","Main","lazy","__webpack_require__","e","then","bind","Projects","parser","document","href","homepage","pathPrefix","pathname","src_Router","v","App","containers_Layout","assign","Boolean","location","hostname","match","reducers","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","apply","storeProvider","es","src_App","rootElement","getElementById","hasChildNodes","ReactDOM","hydrate","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82f83ea7.chunk.js","sourcesContent":["// Action\nconst CHANGE_SCROLL_Y = 'scroll/CHANGE_SCROLL_Y';\n\n// Action Creator\nexport const changeScrollY = scrollY => ({ type: CHANGE_SCROLL_Y, scrollY });\n\n// Initial status\nconst initialState = { scrollY: 0 };\n\n// Reducer\nexport default function scroll(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_SCROLL_Y:\n      return {\n        ...state,\n        scrollY: action.scrollY,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport scroll from './scroll';\n\nexport default combineReducers({ scroll });\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default class LayoutHeader extends Component {\n  render() {\n    return (\n      <header>\n        <div className=\"blur\" />\n        <div>\n          <Link to=\"/\">Han GyeongSu's Portfolio</Link>\n        </div>\n\n        <nav>\n          {this.props.routers.map((router, idx) =>\n            router.path && router.path !== '/' ? (\n              <Link key={idx} to={router.path}>\n                {router.title}\n              </Link>\n            ) : null\n          )}\n        </nav>\n      </header>\n    );\n  }\n}\n\nLayoutHeader.defaultProps = {\n  routers: [],\n};\n\nLayoutHeader.propTypes = {\n  routers: PropTypes.array,\n};\n","import React, { Suspense, Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nexport default class Router extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            {this.props.routers.map((route, idx) =>\n              route.Component ? <Route key={idx} exact={route.exact} path={route.path} component={props => <route.Component {...props} />} /> : null\n            )}\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { changeScrollY } from '@/Reducers/scroll';\n\nimport { Header, Router as Routing } from './Components';\n\nimport './Layout.scss';\n\nclass Layout extends Component {\n  componentDidMount = () => {\n    window.addEventListener('scroll', this.handleScroll);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('scroll', this.handleScroll);\n  };\n\n  handleScroll = () => {\n    const { changeScrollY, scrollY } = this.props;\n    const currentScrollY = window.scrollY;\n    changeScrollY(currentScrollY);\n\n    if (scrollY < currentScrollY) console.log('down');\n    else if (scrollY > currentScrollY) console.log('up');\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header routers={this.props.routers} />\n          <Routing routers={this.props.routers} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nLayout.defaultProps = {\n  routers: [],\n};\n\nLayout.propTypes = {\n  routers: PropTypes.array,\n};\n\n// props 로 넣어줄 스토어 상태값\nconst mapStateToProps = state => ({\n  scrollY: state.scroll.scrollY,\n});\n\n// props 로 넣어줄 액션 생성함수\nconst mapDispatchToProps = dispatch => ({\n  changeScrollY: scrollY => dispatch(changeScrollY(scrollY)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n","import { lazy } from 'react';\nimport { homepage } from 'package.json';\n\nconst Main = lazy(() => import('@/Pages/Main'));\n// const Introduce = lazy(() => import('@/Pages/Introduce'));\nconst Projects = lazy(() => import('@/Pages/Projects'));\n\nconst parser = document.createElement('a');\nparser.href = homepage || 'http://localhost:3000';\n\nconst pathPrefix = parser.pathname === '/' ? '' : parser.pathname;\nconst appendPrefix = path => pathPrefix + path;\n\nexport default [\n  { title: '홈', Component: Main, path: '/', exact: true },\n  // { title: '소개', Component: Introduce, path: '/intro' },\n  { title: '프로젝트', Component: Projects, path: '/projects' },\n].map(v => ({ ...v, path: appendPrefix(v.path) }));\n","import React, { Component } from 'react';\nimport Layout from '@/Containers/Layout';\n\nimport Router from '@/Router';\n\nclass App extends Component {\n  render() {\n    return <Layout {...this.props} routers={Router} />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) return;\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log('New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) config.onUpdate(registration);\n            } else {\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) config.onSuccess(registration);\n            }\n          }\n        };\n      };\n    })\n    .catch(error => console.error('Error during service worker registration:', error));\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from '@/Reducers';\n\nimport App from '@/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst reducers =\n  process.env.NODE_ENV === 'development' ? [rootReducer] : [rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()];\n\nconst store = createStore(...reducers);\n\nconst storeProvider = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nconst rootElement = document.getElementById('root');\n\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(storeProvider, rootElement);\n} else {\n  ReactDOM.render(storeProvider, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}