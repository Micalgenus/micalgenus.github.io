{"version":3,"sources":["serviceWorker.js","store/modules/scroll.js","store/modules/page.js","store/modules/index.js","components/ScrollPosition/index.js","components/LoadingStatus/index.js","containers/StatusBar/index.js","containers/Layout/Components/Header/index.js","containers/Layout/Components/Router/index.js","containers/Layout/index.js","Router.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","changeScrollY","createAction","scrollY","changeWindowHeight","height","handleActions","_handleActions","Object","defineProperty","state","_ref","payload","produce","draft","_ref2","changePath","path","showLoading","timeout","hideLoading","page_handleActions","loading","combineReducers","scroll","page","ScrollPosition","top","H","S","react_default","a","createElement","className","id","style","width","concat","defaultProps","LoadingStatus","error","percent","isVisible","componentWillReceiveProps","nextProps","isLoading","_this","props","startLoading","endLoading","setState","setTimeout","shouldComponentUpdate","nextState","componentDidUpdate","prevState","percen","this","Progress","background","indicating","size","Component","StatusBarContainer","components_ScrollPosition","components_LoadingStatus_LoadingStatus","mapDispatchToProps","connect","windowScrollToPosition","position","windowScrollToPositionDelay","asyncToGenerator","regenerator_default","mark","_callee","delay","wrap","_context","prev","next","Promise","resolve","abrupt","sent","stop","_x","_x2","apply","arguments","windowScrollAnimation","time","interval","end","_callee2","now","step","_context2","LayoutHeader","onChangeRoute","link","_this2","header","Link","to","onClick","routers","map","router","idx","key","title","containers_StatusBar","Router","react","fallback","Switch","route","Route","exact","component","assign","HEADER_SPEED","HEADER_HEIGHT","Layout","componentDidMount","addEventListener","handleScroll","handleResize","pathname","componentWillUnmount","removeEventListener","prevProps","currentScrollY","document","documentElement","scrollTop","getElementById","scrollHeight","clientHeight","BrowserRouter","Header_LayoutHeader","Components_Router_Router","Main","lazy","__webpack_require__","e","then","bind","Projects","parser","href","homepage","pathPrefix","src_Router","v","objectSpread","App","containers_Layout","Routers","reducers","rootReducer","store","createStore","storeProvider","es","src_App","rootElement","hasChildNodes","ReactDOM","hydrate","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18d41757.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) return;\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log('New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) config.onUpdate(registration);\n            } else {\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) config.onSuccess(registration);\n            }\n          }\n        };\n      };\n    })\n    .catch(error => console.error('Error during service worker registration:', error));\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\n// Action\nconst CHANGE_SCROLL_Y = 'scroll/CHANGE_SCROLL_Y';\nconst CHANGE_WINDOW_HEIGHT = 'scroll/CHANGE_WINDOW_HEIGHT';\n\n// Action Creator\nexport const changeScrollY = createAction(CHANGE_SCROLL_Y, scrollY => scrollY);\nexport const changeWindowHeight = createAction(CHANGE_WINDOW_HEIGHT, height => height);\n\n// Initial status\nconst initialState = { scrollY: 0, height: 0 };\n\n// Reducer\nexport default handleActions(\n  {\n    [CHANGE_SCROLL_Y]: (state, { payload }) =>\n      produce(state, draft => {\n        draft.scrollY = payload;\n      }),\n    [CHANGE_WINDOW_HEIGHT]: (state, { payload }) =>\n      produce(state, draft => {\n        draft.height = payload;\n      }),\n  },\n  initialState\n);\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\n// Action\nconst CHANGE_PATH = 'page/CHANGE_PATH';\nconst SHOW_LOADING = 'page/SHOW_LOADING';\nconst HIDE_LOADING = 'page/HIDE_LOADING';\n\n// Action Creator\nexport const changePath = createAction(CHANGE_PATH, path => path);\nexport const showLoading = createAction(SHOW_LOADING, timeout => (timeout === 0 || timeout ? timeout : 5000));\nexport const hideLoading = createAction(HIDE_LOADING);\n\n// Initial status\nconst initialState = { path: '/', timeout: 5000, loading: false };\n\n// Reducer\nexport default handleActions(\n  {\n    [CHANGE_PATH]: (state, { payload }) =>\n      produce(state, draft => {\n        draft.path = payload;\n      }),\n    [SHOW_LOADING]: (state, { payload }) =>\n      produce(state, draft => {\n        draft.timeout = payload;\n        draft.loading = true;\n      }),\n    [HIDE_LOADING]: state =>\n      produce(state, draft => {\n        draft.loading = false;\n      }),\n  },\n  initialState\n);\n","import { combineReducers } from 'redux';\nimport scroll from './scroll';\nimport page from './page';\n\nexport default combineReducers({ scroll, page });\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ScrollPosition.scss';\n\n/**\n * @param {number} top absolute position with parent element\n * @param {number} scroll now windows scroll\n * @param {number} height now browser height\n */\nconst ScrollPosition = ({ top, scroll, height }) => {\n  const H = height >= 1 ? height : 1;\n  const S = scroll <= H ? (scroll > 0 ? scroll : 0) : height;\n\n  return (\n    <div className=\"scroll-component progress-container\" id=\"progress-container\" style={{ top }}>\n      <div className=\"progress-bar\" id=\"page-status\" style={{ width: `${(S / H) * 100}%` }} />\n    </div>\n  );\n};\n\nScrollPosition.defaultProps = {\n  top: 0,\n  scroll: 0,\n  height: 1,\n};\n\nScrollPosition.propTypes = {\n  top: PropTypes.number.isRequired,\n  scroll: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nexport default ScrollPosition;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Progress } from 'semantic-ui-react';\n\nimport './LoadingStatus.scss';\n\n/**\n * @param {number} timeout limit timeout millisecond\n * @param {bool} isLoading if value is true then show component, but false then hide component\n */\nexport default class LoadingStatus extends Component {\n  state = { error: false, percent: 0, timeout: 0, isVisible: false };\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.isLoading !== this.props.isLoading) {\n      if (nextProps.isLoading === true) this.startLoading(nextProps.timeout);\n      if (nextProps.isLoading === false) this.endLoading(false);\n    }\n  };\n\n  // Initialize value for start\n  startLoading = timeout => {\n    this.setState({ percent: 0, timeout: timeout, isVisible: true });\n  };\n\n  endLoading = error => {\n    // 100ms for dispaly at not loading \n    setTimeout(() => this.setState({ percent: 100, error: error, isVisible: false }), 100);\n\n    // 500ms for clear value\n    setTimeout(() => {\n      this.props.hideLoading();\n      this.setState({ percent: 0 });\n    }, 500);\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state.isVisible !== nextState.isVisible) return true;\n    if (this.state.percent !== nextState.percent) return true;\n    if (this.state.error !== nextState.error) return true;\n    return false;\n  };\n\n  componentDidUpdate = prevState => {\n    // run only loading\n    if (this.props.isLoading || this.state.percen === 100) {\n      if (this.state.percent <= 80) setTimeout(() => this.setState({ percent: this.state.percent + 1 }), this.state.timeout / 80);\n      // if percent is 100 without hideLoading of redux\n      else this.endLoading(true);\n    }\n  };\n\n  render() {\n    return (\n      <div className={`loading-status-component ${this.state.isVisible ? 'show' : 'hide'}`}>\n        <Progress style={{ width: '100%', background: 'none' }} percent={this.state.percent} error={this.state.error} indicating size=\"tiny\" />\n      </div>\n    );\n  }\n}\n\nLoadingStatus.defaultProps = {\n  timeout: 5000,\n  isLoading: false,\n};\n\nLoadingStatus.propTypes = {\n  timeout: PropTypes.number.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport ScrollPosition from '@/Components/ScrollPosition';\nimport LoadingStatus from '@/Components/LoadingStatus';\n\nimport { hideLoading } from '@/Reducers/page';\n\nimport './StatusBar.scss';\n\n/**\n * @description Loading and Page scroll status bar\n */\nclass StatusBarContainer extends Component {\n  render() {\n    return (\n      <div className=\"scroll-potition-container\" style={{ top: this.props.top }}>\n        <ScrollPosition top={0} scroll={this.props.scrollY} height={this.props.height} />\n        <LoadingStatus isLoading={this.props.isLoading} timeout={this.props.timeout} hideLoading={this.props.hideLoading} />\n      </div>\n    );\n  }\n}\n\nStatusBarContainer.defaultProps = {\n  top: 0,\n  isLoading: false,\n};\n\nStatusBarContainer.propTypes = {\n  top: PropTypes.number.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n\n// props 로 넣어줄 스토어 상태값\nconst mapStateToProps = state => ({\n  scrollY: state.scroll.scrollY,\n  height: state.scroll.height,\n  isLoading: state.page.loading,\n  timeout: state.page.timeout,\n});\n\n// props 로 넣어줄 액션 생성함수\nconst mapDispatchToProps = { hideLoading };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StatusBarContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport StatusBar from '@/Containers/StatusBar';\n\nimport './Header.scss';\n\nconst windowScrollToPosition = position => window.scroll(0, position);\n\nconst windowScrollToPositionDelay = async (position, delay) =>\n  await new Promise(resolve =>\n    setTimeout(() => {\n      windowScrollToPosition(position);\n      return resolve(true);\n    }, delay)\n  );\n\nconst windowScrollAnimation = (time, interval, end) => {\n  (async () => {\n    while (time > 0) {\n      const now = window.scrollY;\n      const rest = time / interval;\n\n      const step = (end - now) / rest;\n      await windowScrollToPositionDelay(now + step, interval);\n\n      time -= interval;\n    }\n  })();\n};\n\nexport default class LayoutHeader extends Component {\n  onChangeRoute = link => {\n    this.props.changePath(link);\n\n    const animationMilliSecond = 100; // 1000ms = 1s\n    const animationIntervalTime = 5; // milliseconds\n\n    windowScrollAnimation(animationMilliSecond, animationIntervalTime, 0);\n    this.props.showLoading();\n  };\n\n  render() {\n    return (\n      <header style={{ top: -this.props.header || 0 }}>\n        <div className=\"blur\" />\n        <nav>\n          <div>\n            <Link to=\"/\" onClick={() => this.onChangeRoute('/')}>\n              Han GyeongSu's Portfolio\n            </Link>\n          </div>\n\n          <ul>\n            {this.props.routers.map((router, idx) =>\n              router.path && router.path !== '/' ? (\n                <li key={idx}>\n                  <Link to={router.path} onClick={() => this.onChangeRoute(router.path)}>\n                    {router.title}\n                  </Link>\n                </li>\n              ) : null\n            )}\n          </ul>\n        </nav>\n        <StatusBar top={60} />\n      </header>\n    );\n  }\n}\n\nLayoutHeader.defaultProps = {\n  routers: [],\n};\n\nLayoutHeader.propTypes = {\n  routers: PropTypes.array,\n};\n","import React, { Suspense, Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './Router.scss';\n\nexport default class Router extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            {this.props.routers.map((route, idx) =>\n              route.Component ? (\n                <Route\n                  key={idx}\n                  exact={route.exact}\n                  path={route.path}\n                  component={props => <route.Component {...props} hideLoading={this.props.hideLoading} />}\n                />\n              ) : null\n            )}\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { changeScrollY, changeWindowHeight } from '@/Reducers/scroll';\nimport { changePath, showLoading, hideLoading } from '@/Reducers/page';\n\nimport './Layout.font.scss';\nimport './Layout.global.scss';\n\nimport { Header, Router as Routing } from './Components';\n\nconst HEADER_SPEED = 3;\nconst HEADER_HEIGHT = 60;\n\nclass Layout extends Component {\n  state = { header: 0 };\n\n  componentWillReceiveProps = nextProps => {\n    // Get header fixed position from redux scroll\n    const header = this.state.header + (nextProps.scrollY - this.props.scrollY) / HEADER_SPEED;\n    this.setState({ header: header <= HEADER_HEIGHT ? (header >= 0 ? header : 0) : HEADER_HEIGHT });\n  };\n\n  // Update by redux and state\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (\n      nextProps.height !== this.props.height ||\n      nextProps.scrollY !== this.props.scrollY ||\n      nextProps.path !== this.props.path ||\n      nextState.header !== this.state.header\n    )\n      return true;\n\n    return false;\n  };\n\n  componentDidMount = () => {\n    // Add Window event\n    window.addEventListener('scroll', this.handleScroll);\n    window.addEventListener('resize', this.handleResize);\n\n    // Apply browser path with redux\n    this.props.changePath(window.location.pathname);\n  };\n\n  componentWillUnmount = () => {\n    // Remove Window event\n    window.removeEventListener('scroll', this.handleScroll);\n    window.removeEventListener('resize', this.handleResize);\n  };\n\n  // if change data then update browser height\n  componentDidUpdate = (prevProps, prevState) => {\n    this.handleResize();\n  };\n\n  // Update scroll data with redux\n  handleScroll = () => {\n    const { changeScrollY } = this.props;\n    // document.documentElement.scrollTop for IE\n    const currentScrollY = window.scrollY || document.documentElement.scrollTop;\n    if (this.props.scrollY !== currentScrollY) changeScrollY(currentScrollY);\n  };\n\n  // Update window height with redux\n  handleResize = () => {\n    const { changeWindowHeight } = this.props;\n    const height = document.getElementById('root').scrollHeight - document.documentElement.clientHeight;\n    if (this.props.height !== height) changeWindowHeight(height);\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header\n            routers={this.props.routers}\n            changePath={this.props.changePath}\n            scrollY={this.props.scrollY}\n            header={this.state.header}\n            showLoading={this.props.showLoading}\n          />\n          <Routing routers={this.props.routers} hideLoading={this.props.hideLoading} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nLayout.defaultProps = {\n  routers: [],\n};\n\nLayout.propTypes = {\n  routers: PropTypes.array.isRequired,\n};\n\n// props 로 넣어줄 스토어 상태값\nconst mapStateToProps = state => ({\n  scrollY: state.scroll.scrollY,\n  height: state.scroll.height,\n  path: state.page.path,\n});\n\n// props 로 넣어줄 액션 생성함수\nconst mapDispatchToProps = { changeScrollY, changePath, changeWindowHeight, showLoading, hideLoading };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n","import { lazy } from 'react';\nimport { homepage } from 'package.json';\n\nconst Main = lazy(() => import('@/Pages/Main'));\n// const Introduce = lazy(() => import('@/Pages/Introduce'));\nconst Projects = lazy(() => import('@/Pages/Projects'));\n\nconst parser = document.createElement('a');\nparser.href = homepage || 'http://localhost:3000';\n\nconst pathPrefix = parser.pathname === '/' ? '' : parser.pathname;\nconst appendPrefix = path => pathPrefix + path;\n\nexport default [\n  { title: '홈', Component: Main, path: '/', exact: true },\n  // { title: '소개', Component: Introduce, path: '/intro' },\n  { title: '프로젝트', Component: Projects, path: '/projects' },\n].map(v => ({ ...v, path: appendPrefix(v.path) }));\n","import React, { Component } from 'react';\n\nimport Layout from '@/Containers/Layout';\nimport Routers from '@/Router';\n\nclass App extends Component {\n  render() {\n    return <Layout {...this.props} routers={Routers} />;\n  }\n}\n\nexport default App;\n","import 'react-app-polyfill/ie9';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport rootReducer from '@/Reducers';\n\n// Load module CSS\nimport 'semantic-ui-css/semantic.min.css';\n\n// Load App\nimport App from '@/App';\n\n// Redux DevTools\nconst reducers =\n  process.env.NODE_ENV !== 'development' ? [rootReducer] : [rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()];\n\n// Redux Store\nconst store = createStore(...reducers);\nconst storeProvider = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nconst rootElement = document.getElementById('root');\n\n// Create Dom\n// hydrate for react-snap\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(storeProvider, rootElement);\n} else {\n  ReactDOM.render(storeProvider, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}