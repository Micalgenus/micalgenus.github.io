{"version":3,"sources":["polyfill.js","stores/page.js","stores/scroll.js","serviceWorker.js","components/ScrollPosition/index.js","components/LoadingStatus/index.js","containers/StatusBar/index.js","Router.js","containers/Layout/Components/Header/index.js","containers/Layout/Components/Footer/index.js","containers/Layout/Components/RouterContainer/index.js","containers/Layout/Components/ScrollTo/index.js","containers/Layout/index.js","App.js","index.js","stores/index.js","components/ExternalLink/index.js"],"names":["smoothscroll","polyfill","stores_page","observable","window","location","pathname","action","path","_this","currentPath","pageName","_this2","loadingPages","find","v","concat","Object","toConsumableArray","_this3","remove","stores_scroll","scrollY","nextScrollY","height","movedValue","movedScrollY","Boolean","hostname","match","ScrollPosition","_this$props","this","props","top","scroll","H","S","react_default","a","createElement","className","id","style","width","React","Component","defaultProps","LoadingStatus","state","error","percent","timeout","isVisible","componentWillReceiveProps","nextProps","isLoading","startLoading","endLoading","setState","setTimeout","shouldComponentUpdate","nextState","componentDidUpdate","prevState","percen","Progress","background","indicating","size","StatusBarContainer","inject","observer","page","components_ScrollPosition","components_LoadingStatus_LoadingStatus","length","Main","lazy","__webpack_require__","e","then","bind","parser","document","href","homepage","pathPrefix","appendPrefix","src_Router","title","exact","map","objectSpread","LayoutHeader","onChangeRoute","link","changePath","left","behavior","startLoadPage","renderLink","route","idx","rootUrl","key","Link","to","onClick","routers","router","containers_StatusBar","LayoutFooter","getCopyRight","ExternalLink","getBuildAndTestInfo","getServerInfo","Router","endLoadPage","react","fallback","Switch","Route","component","assign","ScrollTo","onClickUp","preventDefault","onClickDown","arrow","Icon","circular","name","Layout","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","events","Symbol","iterator","next","done","value","addEventListener","event","method","err","return","componentWillUnmount","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeEventListener","handleScroll","changeScrollY","documentElement","scrollTop","handleResize","changeWindowHeight","getElementById","scrollHeight","clientHeight","BrowserRouter","Components_Header","RouterContainer","Footer_LayoutFooter","Components_ScrollTo_ScrollTo","App","containers_Layout","Routers","storeProvider","_ref","children","index_module","src_App","rootElement","hasChildNodes","ReactDOM","hydrate","render","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","target","test"],"mappings":"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","file":"static/js/main.d5bf3735.chunk.js","sourcesContent":["import smoothscroll from 'smoothscroll-polyfill';\n\n// kick off the polyfill!\nsmoothscroll.polyfill();\n","import { observable, action } from 'mobx';\n\nclass PageStore {\n  @observable currentPath = window.location.pathname || '/';\n  @observable loadingPages = [];\n\n  @action changePath = path => {\n    this.currentPath = path;\n  };\n\n  @action startLoadPage = pageName => {\n    if (!this.loadingPages.find(v => v === pageName)) this.loadingPages = [...this.loadingPages, pageName];\n  };\n\n  @action endLoadPage = pageName => {\n    this.loadingPages.remove(pageName);\n  };\n}\n\nexport default new PageStore();\n","import { observable, action } from 'mobx';\n\nclass ScrollStore {\n  @observable scrollY = 0;\n  @observable movedScrollY = 0;\n  @observable height = 0;\n\n  @action changeScrollY = scrollY => {\n    const nextScrollY = scrollY >= 0 ? (scrollY <= this.height ? scrollY : this.height) : 0;\n    const movedValue = nextScrollY - this.scrollY; // current - pre\n\n    this.movedScrollY = (movedValue > 0 && this.movedScrollY > 0) || (movedValue < 0 && this.movedScrollY < 0) ? this.movedScrollY + movedValue : movedValue;\n    this.scrollY = nextScrollY;\n  };\n\n  @action changeWindowHeight = height => {\n    this.height = height >= 0 ? height : 0;\n  };\n}\n\nexport default new ScrollStore();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) return;\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log('New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) config.onUpdate(registration);\n            } else {\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) config.onSuccess(registration);\n            }\n          }\n        };\n      };\n    })\n    .catch(error => console.error('Error during service worker registration:', error));\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ScrollPosition.scss';\n\n/**\n * @param {number} top absolute position with parent element\n * @param {number} scroll now windows scroll\n * @param {number} height now browser height\n */\nclass ScrollPosition extends React.Component {\n  render() {\n    const { top, scroll, height } = this.props;\n    const H = height >= 1 ? height : 1;\n    const S = scroll <= H ? (scroll > 0 ? scroll : 0) : height;\n\n    return (\n      <div className=\"scroll-component progress-container\" id=\"progress-container\" style={{ top }}>\n        <div className=\"progress-bar\" id=\"page-status\" style={{ width: `${(S / H) * 100}%` }} />\n      </div>\n    );\n  }\n}\n\nScrollPosition.defaultProps = {\n  top: 0,\n};\n\nScrollPosition.propTypes = {\n  top: PropTypes.number.isRequired,\n};\n\nexport default ScrollPosition;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Progress } from 'semantic-ui-react';\n\nimport './LoadingStatus.scss';\n\n/**\n * @param {number} timeout limit timeout millisecond\n * @param {bool} isLoading if value is true then show component, but false then hide component\n */\nexport default class LoadingStatus extends Component {\n  state = { error: false, percent: 0, timeout: 5000, isVisible: false };\n\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.isLoading !== this.props.isLoading) {\n      if (nextProps.isLoading === true) this.startLoading(5000);\n      if (nextProps.isLoading === false) this.endLoading(false);\n    }\n  };\n\n  // Initialize value for start\n  startLoading = timeout => {\n    this.setState({ percent: 0, timeout: timeout, isVisible: true });\n  };\n\n  endLoading = error => {\n    // 100ms for dispaly at not loading\n    setTimeout(() => this.setState({ percent: 100, error: error, isVisible: false }), 100);\n\n    // 500ms for clear value\n    setTimeout(() => {\n      this.setState({ percent: 0 });\n    }, 500);\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.state.isVisible !== nextState.isVisible) return true;\n    if (this.state.percent !== nextState.percent) return true;\n    if (this.state.error !== nextState.error) return true;\n    return false;\n  };\n\n  componentDidUpdate = prevState => {\n    // run only loading\n    if (this.props.isLoading || this.state.percen === 100) {\n      if (this.state.percent <= 80) setTimeout(() => this.setState({ percent: this.state.percent + 1 }), this.state.timeout / 80);\n      // if percent is 100 without hideLoading of redux\n      else this.endLoading(true);\n    }\n  };\n\n  render() {\n    return (\n      <div className={`loading-status-component ${this.state.isVisible ? 'show' : 'hide'}`}>\n        <Progress style={{ width: '100%', background: 'none' }} percent={this.state.percent} error={this.state.error} indicating size=\"tiny\" />\n      </div>\n    );\n  }\n}\n\nLoadingStatus.defaultProps = {\n  isLoading: false,\n};\n\nLoadingStatus.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\n\nimport ScrollPosition from '@/Components/ScrollPosition';\nimport LoadingStatus from '@/Components/LoadingStatus';\n\nimport './StatusBar.scss';\n\n/**\n * @description Loading and Page scroll status bar\n */\n@inject('page')\n@inject('scroll')\n@observer\nclass StatusBarContainer extends Component {\n  render() {\n    const { page, scroll } = this.props;\n    return (\n      <div className=\"scroll-potition-container\" style={{ top: this.props.top }}>\n        <ScrollPosition top={0} scroll={scroll.scrollY} height={scroll.height} />\n        <LoadingStatus isLoading={page.loadingPages.length !== 0} />\n      </div>\n    );\n  }\n}\n\nStatusBarContainer.defaultProps = {\n  top: 0,\n};\n\nStatusBarContainer.propTypes = {\n  top: PropTypes.number.isRequired,\n};\n\nexport default StatusBarContainer;\n","import { lazy } from 'react';\nimport { homepage } from 'package.json';\n\nconst Main = lazy(() => import('@/Pages/Main'));\n\nconst parser = document.createElement('a');\nparser.href = homepage || 'http://localhost:3000';\n\nconst pathPrefix = parser.pathname === '/' ? '' : parser.pathname;\nexport const appendPrefix = path => pathPrefix + path;\n\nexport default [{ title: '홈', Component: Main, path: '/', exact: true }].map(v => ({ ...v, path: appendPrefix(v.path) }));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport StatusBar from '@/Containers/StatusBar';\n\nimport { appendPrefix } from '@/Router';\n\nimport './Header.scss';\n\nconst HEADER_HEIGHT = 60;\n\nclass LayoutHeader extends Component {\n  onChangeRoute = link => {\n    if (link === this.props.currentPath) return false;\n    this.props.changePath(link);\n\n    window.scroll({ top: 0, left: 0, behavior: 'smooth' });\n    this.props.startLoadPage(link);\n  };\n\n  renderLink = (route, idx, rootUrl) => {\n    return route.path && route.path !== rootUrl ? (\n      <li key={idx}>\n        <Link className={route.path === this.props.currentPath ? 'active' : 'non-active'} to={route.path} onClick={() => this.onChangeRoute(route.path)}>\n          {route.title}\n        </Link>\n      </li>\n    ) : null;\n  };\n\n  render() {\n    const rootUrl = appendPrefix('/');\n    const { movedScrollY } = this.props;\n\n    return (\n      <header style={{ top: movedScrollY > 0 ? -HEADER_HEIGHT : 0 }}>\n        <div className=\"blur\" />\n        <nav>\n          <div>\n            <Link to={rootUrl} onClick={() => this.onChangeRoute(rootUrl)}>\n              Han GyeongSu's Portfolio\n            </Link>\n          </div>\n          <ul>{this.props.routers.map((router, idx) => this.renderLink(router, idx, rootUrl))}</ul>\n        </nav>\n        <StatusBar top={60} />\n      </header>\n    );\n  }\n}\n\nLayoutHeader.defaultProps = {\n  routers: [],\n};\n\nLayoutHeader.propTypes = {\n  routers: PropTypes.array,\n};\n\nexport default LayoutHeader;\n","import React, { Component } from 'react';\n\nimport ExternalLink from '@/Components/ExternalLink';\n\nimport './Footer.scss';\n\nexport default class LayoutFooter extends Component {\n  getCopyRight = () => (\n    <div>\n      The source code is on <ExternalLink href=\"https://github.com/micalgenus/portfolio\">Github</ExternalLink>. &copy;All Rights Reserved, GyeongSu Han.\n    </div>\n  );\n\n  getBuildAndTestInfo = () => (\n    <div>\n      Powered by React. Tests use <ExternalLink href=\"https://travis-ci.org/micalgenus/portfolio\">Travis-ci</ExternalLink> and{' '}\n      <ExternalLink href=\"https://codeclimate.com/github/micalgenus/portfolio\">codeclimate</ExternalLink>.\n    </div>\n  );\n\n  getServerInfo = () => (\n    <div>\n      Hosted by Google Cloud Platform using Nginx and <ExternalLink href=\"https://hub.docker.com/r/micalgenus/portfolio\">Docker</ExternalLink> swarm.\n    </div>\n  );\n\n  render() {\n    return (\n      <footer>\n        {this.getCopyRight()}\n        {this.getBuildAndTestInfo()}\n        {this.getServerInfo()}\n      </footer>\n    );\n  }\n}\n","import React, { Suspense, Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './Router.scss';\n\nclass Router extends Component {\n  render() {\n    const { endLoadPage } = this.props;\n\n    return (\n      <div className=\"container\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            {this.props.routers.map((route, idx) =>\n              route.Component ? (\n                <Route\n                  key={idx}\n                  exact={route.exact}\n                  path={route.path}\n                  component={props => <route.Component {...props} link={route.path} endLoadPage={endLoadPage} />}\n                />\n              ) : null\n            )}\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nexport default Router;\n","import React, { Component } from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nimport './ScrollTo.scss';\n\nexport default class ScrollTo extends Component {\n  onClickUp = e => {\n    e.preventDefault();\n    window.scroll({ top: 0, left: 0, behavior: 'smooth' });\n  };\n\n  onClickDown = e => {\n    e.preventDefault();\n    window.scroll({ top: this.props.height, left: 0, behavior: 'smooth' });\n  };\n\n  render() {\n    const { height, scrollY } = this.props;\n    const percent = (scrollY / height) * 100;\n    const arrow = percent > 5 ? (percent > 95 ? 'scroll-position-bottom' : 'none') : 'scroll-position-top';\n    return (\n      <div className={`scroll-to-component ${arrow}`}>\n        <Icon id=\"to-top\" onClick={this.onClickUp} circular size=\"mini\" name=\"angle up\" />\n        <Icon id=\"to-bottom\" onClick={this.onClickDown} circular size=\"mini\" name=\"angle down\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './Layout.font.scss';\nimport './Layout.global.scss';\n\nimport { Header, Footer, Router as Routing, ScrollTo } from './Components';\n\n@inject('page')\n@inject('scroll')\n@observer\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.events = [\n      { event: 'scroll', method: this.handleScroll },\n      { event: 'scroll', method: this.handleResize },\n      { event: 'resize', method: this.handleResize },\n    ];\n  }\n\n  // Add Window event\n  componentDidMount = () => {\n    for (const e of this.events) window.addEventListener(e.event, e.method);\n  };\n\n  // Remove Window event\n  componentWillUnmount = () => {\n    for (const e of this.events) window.removeEventListener(e.event, e.method);\n  };\n\n  // Update scroll data with mobx\n  handleScroll = () => {\n    const { changeScrollY } = this.props.scroll;\n    changeScrollY(window.scrollY || document.documentElement.scrollTop);\n  };\n\n  // Update window height with redux\n  handleResize = () => {\n    const { changeWindowHeight } = this.props.scroll;\n    changeWindowHeight(document.getElementById('root').scrollHeight - document.documentElement.clientHeight);\n  };\n\n  render() {\n    const { page, scroll } = this.props;\n\n    return (\n      <Router>\n        <div>\n          <Header\n            routers={this.props.routers}\n            currentPath={page.currentPath}\n            changePath={page.changePath}\n            startLoadPage={page.startLoadPage}\n            movedScrollY={scroll.movedScrollY}\n          />\n          <Routing routers={this.props.routers} endLoadPage={page.endLoadPage} />\n          <Footer />\n          <ScrollTo scrollY={scroll.scrollY} height={scroll.height} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nLayout.defaultProps = {\n  routers: [],\n};\n\nLayout.propTypes = {\n  routers: PropTypes.array.isRequired,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\n\nimport Layout from '@/Containers/Layout';\nimport Routers from '@/Router';\n\nclass App extends Component {\n  render() {\n    return <Layout {...this.props} routers={Routers} />;\n  }\n}\n\nexport default App;\n","import 'react-app-polyfill/ie9';\nimport './polyfill';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Stores from '@/Stores';\n\nimport * as serviceWorker from './serviceWorker';\n\n// Load module CSS\nimport 'semantic-ui-css/semantic.min.css';\n\n// Load App\nimport App from '@/App';\n\n// Mobx Stores\nconst storeProvider = (\n  <Stores>\n    <App />\n  </Stores>\n);\nconst rootElement = document.getElementById('root');\n\n// Create Dom\n// hydrate for react-snap\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(storeProvider, rootElement);\n} else {\n  ReactDOM.render(storeProvider, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Provider } from 'mobx-react';\n\nimport page from './page';\nimport scroll from './scroll';\n\nexport default ({ children }) => (\n  <Provider page={page} scroll={scroll}>\n    {children}\n  </Provider>\n);\n","import React from 'react';\n\nconst ExternalLink = ({ href, children }) => {\n  const linkRegex = /^https?:\\/\\//;\n\n  return (\n    <a href={href} target={linkRegex.test(href) ? '_target' : '_self'}>\n      {children}\n    </a>\n  );\n};\n\nexport default ExternalLink;\n"],"sourceRoot":""}