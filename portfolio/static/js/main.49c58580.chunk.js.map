{"version":3,"sources":["store/modules/scroll.js","store/modules/page.js","store/modules/index.js","components/ScrollPosition/index.js","containers/ScrollPosition/index.js","containers/Layout/Components/Header/index.js","containers/Layout/Components/Router/index.js","containers/Layout/index.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["CHANGE_SCROLL_Y","CHANGE_WINDOW_HEIGHT","initialState","scrollY","height","CHANGE_PATH","path","combineReducers","scroll","state","arguments","length","undefined","action","type","Object","objectSpread","page","ScrollPosition","this","props","react_default","a","createElement","className","id","style","top","width","concat","Component","defaultProps","ScrollPositionContainer","components_ScrollPosition_ScrollPosition","connect","LayoutHeader","_this","header","Link","to","onClick","changePath","routers","map","router","idx","key","title","containers_ScrollPosition","Router","react","fallback","Switch","route","Route","exact","component","HEADER_SPEED","HEADER_HEIGHT","Layout","componentWillReceiveProps","nextProps","setState","shouldComponentUpdate","nextState","componentDidMount","window","addEventListener","handleScroll","handleResize","location","pathname","componentDidUpdate","prevProps","prevState","componentWillUnmount","removeEventListener","changeScrollY","changeWindowHeight","document","getElementById","scrollHeight","documentElement","clientHeight","Header_LayoutHeader","Components_Router_Router","mapDispatchToProps","Main","lazy","__webpack_require__","e","then","bind","Projects","parser","href","homepage","pathPrefix","src_Router","v","App","BrowserRouter","containers_Layout","assign","Routers","Boolean","hostname","match","reducers","rootReducer","store","createStore","apply","storeProvider","es","src_App","rootElement","hasChildNodes","ReactDOM","hydrate","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49c58580.chunk.js","sourcesContent":["// Action\nconst CHANGE_SCROLL_Y = 'scroll/CHANGE_SCROLL_Y';\nconst CHANGE_WINDOW_HEIGHT = 'scroll/CHANGE_WINDOW_HEIGHT';\n\n// Action Creator\nexport const changeScrollY = scrollY => ({ type: CHANGE_SCROLL_Y, scrollY });\nexport const changeWindowHeight = height => ({ type: CHANGE_WINDOW_HEIGHT, height });\n\n// Initial status\nconst initialState = { scrollY: 0, height: 0 };\n\n// Reducer\nexport default function scroll(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_SCROLL_Y:\n      return {\n        ...state,\n        scrollY: action.scrollY,\n      };\n    case CHANGE_WINDOW_HEIGHT:\n      return {\n        ...state,\n        height: action.height,\n      };\n    default:\n      return state;\n  }\n}\n","// Action\nconst CHANGE_PATH = 'page/CHANGE_PATH';\n\n// Action Creator\nexport const changePath = path => ({ type: CHANGE_PATH, path });\n\n// Initial status\nconst initialState = { path: '/' };\n\n// Reducer\nexport default function page(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_PATH:\n      return {\n        ...state,\n        path: action.path,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport scroll from './scroll';\nimport page from './page';\n\nexport default combineReducers({ scroll, page });\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ScrollPosition.scss';\n\nexport default class ScrollPosition extends Component {\n  render() {\n    const height = this.props.height >= 1 ? this.props.height : 1;\n    const scroll = this.props.scroll <= height ? (this.props.scroll > 0 ? this.props.scroll : 0) : this.props.height;\n\n    // document.getElementById('root').scrollHeight - document.documentElement.clientHeight\n    return (\n      <div className=\"scroll-component progress-container\" id=\"progress-container\" style={{ top: this.props.top }}>\n        <div className=\"progress-bar\" id=\"page-status\" style={{ width: `${(scroll / height) * 100}%` }} />\n      </div>\n    );\n  }\n}\n\nScrollPosition.defaultProps = {\n  top: 0,\n  scroll: 0,\n  height: 1,\n};\n\nScrollPosition.propTypes = {\n  top: PropTypes.number,\n  scroll: PropTypes.number,\n  height: PropTypes.number,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ScrollPosition from '@/Components/ScrollPosition';\n\nimport './ScrollPosition.scss';\n\nclass ScrollPositionContainer extends Component {\n  render() {\n    return (\n      <div className=\"scroll-potition-container\" style={{ top: this.props.top }}>\n        <ScrollPosition top={0} scroll={this.props.scrollY} height={this.props.height} />\n      </div>\n    );\n  }\n}\n\n// props 로 넣어줄 스토어 상태값\nconst mapStateToProps = state => ({\n  scrollY: state.scroll.scrollY,\n  height: state.scroll.height,\n});\n\n// props 로 넣어줄 액션 생성함수\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScrollPositionContainer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport ScrollPosition from '@/Containers/ScrollPosition';\n\nimport './Header.scss';\n\nexport default class LayoutHeader extends Component {\n  render() {\n    return (\n      <header style={{ top: -this.props.header || 0 }}>\n        <div className=\"blur\" />\n        <nav>\n          <div>\n            <Link to=\"/\" onClick={() => this.props.changePath('/')}>\n              Han GyeongSu's Portfolio\n            </Link>\n          </div>\n\n          <ul>\n            {this.props.routers.map((router, idx) =>\n              router.path && router.path !== '/' ? (\n                <li key={idx}>\n                  <Link to={router.path} onClick={() => this.props.changePath(router.path)}>\n                    {router.title}\n                  </Link>\n                </li>\n              ) : null\n            )}\n          </ul>\n        </nav>\n        <ScrollPosition top={60} />\n      </header>\n    );\n  }\n}\n\nLayoutHeader.defaultProps = {\n  routers: [],\n  scroll: 0,\n  height: 0,\n};\n\nLayoutHeader.propTypes = {\n  routers: PropTypes.array,\n  scroll: PropTypes.number,\n  height: PropTypes.number,\n};\n","import React, { Suspense, Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './Router.scss';\n\nexport default class Router extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            {this.props.routers.map((route, idx) =>\n              route.Component ? <Route key={idx} exact={route.exact} path={route.path} component={props => <route.Component {...props} />} /> : null\n            )}\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { changeScrollY, changeWindowHeight } from '@/Reducers/scroll';\nimport { changePath } from '@/Reducers/page';\n\nimport './Layout.font.scss';\nimport './Layout.global.scss';\n\nimport { Header, Router as Routing } from './Components';\n\nconst HEADER_SPEED = 3;\nconst HEADER_HEIGHT = 60;\n\nclass Layout extends Component {\n  state = { header: 0 };\n\n  componentWillReceiveProps = nextProps => {\n    const header = this.state.header + (nextProps.scrollY - this.props.scrollY) / HEADER_SPEED;\n    this.setState({ header: header <= HEADER_HEIGHT ? (header >= 0 ? header : 0) : HEADER_HEIGHT });\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (nextProps.height !== this.props.height) return true;\n    if (nextProps.scrollY !== this.props.scrollY) return true;\n    if (nextProps.path !== this.props.path) return true;\n\n    if (nextState.header !== this.state.header) return true;\n\n    return false;\n  };\n\n  componentDidMount = () => {\n    window.addEventListener('scroll', this.handleScroll);\n    window.addEventListener('resize', this.handleResize);\n\n    this.props.changePath(window.location.pathname);\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    this.handleResize();\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('scroll', this.handleScroll);\n    window.removeEventListener('resize', this.handleResize);\n  };\n\n  handleScroll = () => {\n    const { changeScrollY } = this.props;\n    const currentScrollY = window.scrollY;\n    changeScrollY(currentScrollY);\n  };\n\n  handleResize = () => {\n    const { changeWindowHeight } = this.props;\n    const height = document.getElementById('root').scrollHeight - document.documentElement.clientHeight;\n    changeWindowHeight(height);\n  };\n\n  render() {\n    return (\n      <div>\n        <Header\n          routers={this.props.routers}\n          scroll={this.props.scrollY}\n          height={this.props.height}\n          changePath={this.props.changePath}\n          header={this.state.header}\n        />\n        <Routing routers={this.props.routers} />\n      </div>\n    );\n  }\n}\n\nLayout.defaultProps = {\n  routers: [],\n};\n\nLayout.propTypes = {\n  routers: PropTypes.array,\n};\n\n// props 로 넣어줄 스토어 상태값\nconst mapStateToProps = state => ({\n  scrollY: state.scroll.scrollY,\n  height: state.scroll.height,\n  path: state.page.path,\n});\n\n// props 로 넣어줄 액션 생성함수\nconst mapDispatchToProps = { changeScrollY, changePath, changeWindowHeight };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Layout);\n","import { lazy } from 'react';\nimport { homepage } from 'package.json';\n\nconst Main = lazy(() => import('@/Pages/Main'));\n// const Introduce = lazy(() => import('@/Pages/Introduce'));\nconst Projects = lazy(() => import('@/Pages/Projects'));\n\nconst parser = document.createElement('a');\nparser.href = homepage || 'http://localhost:3000';\n\nconst pathPrefix = parser.pathname === '/' ? '' : parser.pathname;\nconst appendPrefix = path => pathPrefix + path;\n\nexport default [\n  { title: '홈', Component: Main, path: '/', exact: true },\n  // { title: '소개', Component: Introduce, path: '/intro' },\n  { title: '프로젝트', Component: Projects, path: '/projects' },\n].map(v => ({ ...v, path: appendPrefix(v.path) }));\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Layout from '@/Containers/Layout';\n\nimport Routers from '@/Router';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Layout {...this.props} routers={Routers} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) return;\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log('New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) config.onUpdate(registration);\n            } else {\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) config.onSuccess(registration);\n            }\n          }\n        };\n      };\n    })\n    .catch(error => console.error('Error during service worker registration:', error));\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from '@/Reducers';\n\nimport App from '@/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst reducers =\n  process.env.NODE_ENV !== 'development' ? [rootReducer] : [rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()];\n\nconst store = createStore(...reducers);\n\nconst storeProvider = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nconst rootElement = document.getElementById('root');\n\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(storeProvider, rootElement);\n} else {\n  ReactDOM.render(storeProvider, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}